.rt-DialogOverlay {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  inset: 0;

  --dialog-overlay-padding-top: var(--space-4);
  --dialog-overlay-padding-bottom: max(var(--space-4), 4vh);
  padding-top: var(--dialog-overlay-padding-top);
  padding-bottom: var(--dialog-overlay-padding-bottom);
  padding-left: var(--space-4);
  padding-right: var(--space-4);

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    /* background-color: var(--color-overlay); */
  }
}

.rt-DialogContent {
  width: 100%;
  max-width: 580px;
  outline: none;
  overflow: auto;
  background-color: var(--color-panel-solid);
  box-shadow: var(--shadow-6);
  box-sizing: border-box;
  z-index: 1;

  --inset-padding: var(--dialog-content-padding);
  padding: var(--inset-padding);

  /* prettier-ignore */
  max-height: calc(100vh - var(--dialog-overlay-padding-top) - var(--dialog-overlay-padding-bottom));

  @supports (max-height: 100dvh) {
    /* prettier-ignore */
    max-height: calc(100dvh - var(--dialog-overlay-padding-top) - var(--dialog-overlay-padding-bottom));
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-DialogContent {
    &:where(.rt-r-size-1) {
      --dialog-content-padding: var(--space-3);
      border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-2) {
      --dialog-content-padding: var(--space-4);
      border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-3) {
      --dialog-content-padding: var(--space-5);
      border-radius: var(--radius-5);
    }
    &:where(.rt-r-size-4) {
      --dialog-content-padding: var(--space-6);
      border-radius: var(--radius-5);
    }
  }
}

@property --overlay-blur {
  syntax: '<length>';
  inherits: false;
  initial-value: 0px;
}
@property --overlay-brightness {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@keyframes rt-blur-in {
  from {
    --overlay-blur: 0px;
    --overlay-brightness: 1;
  }
  to {
    --overlay-blur: 3px;
    --overlay-brightness: 0.7;
  }
}

@keyframes rt-blur-out {
  from {
    --overlay-blur: 3px;
    --overlay-brightness: 0.7;
  }
  to {
    --overlay-blur: 0px;
    --overlay-brightness: 1;
  }
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes rt-dialog-overlay-no-op {
    from {
      opacity: 1;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes rt-dialog-content-show {
    from {
      opacity: 0;
      transform: translateY(5px) scale(0.97);
    }
    to {
      opacity: 1;
      transform: translateY(0px) scale(1);
    }
  }

  @keyframes rt-dialog-content-hide {
    from {
      opacity: 1;
      transform: translateY(0px) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(5px) scale(0.99);
    }
  }

  .rt-DialogOverlay {
    &::after {
      backdrop-filter: blur(var(--overlay-blur))
        brightness(var(--overlay-brightness));
    }
    /* Keep the overlay mounted until the children have animated */
    &:where([data-state='closed']) {
      animation: rt-blur-out 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    &:where([data-state='open'])::after {
      animation: rt-blur-in 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
    &:where([data-state='closed'])::after {
      animation: rt-blur-out 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
  }

  .rt-DialogContent {
    &:where([data-state='open']) {
      animation: rt-dialog-content-show 400ms cubic-bezier(0.16, 1, 0.3, 1);
    }
    &:where([data-state='closed']) {
      animation: rt-dialog-content-hide 150ms cubic-bezier(0.16, 1, 0.3, 1);
    }
  }
}
